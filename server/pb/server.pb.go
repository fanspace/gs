// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

// 定义生成service的包名

package myserver

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"id,omitempty"`
	Limit                int64    `protobuf:"varint,2,opt,name=Limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserReq) Reset()         { *m = UserReq{} }
func (m *UserReq) String() string { return proto.CompactTextString(m) }
func (*UserReq) ProtoMessage()    {}
func (*UserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *UserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserReq.Unmarshal(m, b)
}
func (m *UserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserReq.Marshal(b, m, deterministic)
}
func (m *UserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserReq.Merge(m, src)
}
func (m *UserReq) XXX_Size() int {
	return xxx_messageInfo_UserReq.Size(m)
}
func (m *UserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserReq proto.InternalMessageInfo

func (m *UserReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserReq) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type User struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"id,omitempty"`
	Account              string   `protobuf:"bytes,2,opt,name=Account,proto3" json:"account,omitempty"`
	Showname             string   `protobuf:"bytes,3,opt,name=Showname,proto3" json:"showname,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=Email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *User) GetShowname() string {
	if m != nil {
		return m.Showname
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type UserRes struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"success,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=Msg,proto3" json:"msg,omitempty"`
	User                 *User    `protobuf:"bytes,3,opt,name=User,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRes) Reset()         { *m = UserRes{} }
func (m *UserRes) String() string { return proto.CompactTextString(m) }
func (*UserRes) ProtoMessage()    {}
func (*UserRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{2}
}

func (m *UserRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRes.Unmarshal(m, b)
}
func (m *UserRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRes.Marshal(b, m, deterministic)
}
func (m *UserRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRes.Merge(m, src)
}
func (m *UserRes) XXX_Size() int {
	return xxx_messageInfo_UserRes.Size(m)
}
func (m *UserRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRes.DiscardUnknown(m)
}

var xxx_messageInfo_UserRes proto.InternalMessageInfo

func (m *UserRes) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *UserRes) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *UserRes) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UserListRes struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"success,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=Msg,proto3" json:"msg,omitempty"`
	Users                []*User  `protobuf:"bytes,3,rep,name=Users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserListRes) Reset()         { *m = UserListRes{} }
func (m *UserListRes) String() string { return proto.CompactTextString(m) }
func (*UserListRes) ProtoMessage()    {}
func (*UserListRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{3}
}

func (m *UserListRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserListRes.Unmarshal(m, b)
}
func (m *UserListRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserListRes.Marshal(b, m, deterministic)
}
func (m *UserListRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserListRes.Merge(m, src)
}
func (m *UserListRes) XXX_Size() int {
	return xxx_messageInfo_UserListRes.Size(m)
}
func (m *UserListRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UserListRes.DiscardUnknown(m)
}

var xxx_messageInfo_UserListRes proto.InternalMessageInfo

func (m *UserListRes) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *UserListRes) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *UserListRes) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*UserReq)(nil), "myserver.UserReq")
	proto.RegisterType((*User)(nil), "myserver.User")
	proto.RegisterType((*UserRes)(nil), "myserver.UserRes")
	proto.RegisterType((*UserListRes)(nil), "myserver.UserListRes")
}

func init() {
	proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7)
}

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 267 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x51, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x6d, 0xb3, 0xad, 0x89, 0x53, 0x29, 0x3a, 0x28, 0x2c, 0x3d, 0x95, 0xc5, 0x83, 0xa7, 0x88,
	0xf5, 0xe2, 0xd5, 0x83, 0x48, 0xa1, 0x3d, 0x98, 0xe0, 0xc1, 0x93, 0xb4, 0xe9, 0xa0, 0x01, 0xd3,
	0xd8, 0x9d, 0xc4, 0x92, 0xbf, 0x97, 0x9d, 0x6d, 0x04, 0x6d, 0x2f, 0x9e, 0x92, 0xf7, 0xde, 0xbc,
	0xf7, 0x66, 0x77, 0xe1, 0x84, 0xc9, 0x7e, 0x91, 0x8d, 0x3f, 0x6d, 0x59, 0x95, 0x18, 0x15, 0x8d,
	0xc7, 0xe6, 0x1a, 0xc2, 0x67, 0x26, 0x9b, 0xd0, 0x06, 0x87, 0x10, 0x4c, 0x57, 0xba, 0x3b, 0xee,
	0x5e, 0xa9, 0x24, 0x98, 0xae, 0xf0, 0x1c, 0xfa, 0xb3, 0xbc, 0xc8, 0x2b, 0x1d, 0x08, 0xe5, 0x81,
	0x59, 0x42, 0xcf, 0x19, 0xf6, 0xa6, 0x35, 0x84, 0xf7, 0x59, 0x56, 0xd6, 0x6b, 0x3f, 0x7f, 0x9c,
	0xb4, 0x10, 0x47, 0x10, 0xa5, 0xef, 0xe5, 0x76, 0xbd, 0x28, 0x48, 0x2b, 0x91, 0x7e, 0xb0, 0xeb,
	0x78, 0x28, 0x16, 0xf9, 0x87, 0xee, 0x89, 0xe0, 0x81, 0x79, 0x69, 0x97, 0x62, 0x17, 0x9b, 0xd6,
	0x59, 0x46, 0xcc, 0xd2, 0x15, 0x25, 0x2d, 0xc4, 0x53, 0x50, 0x73, 0x7e, 0xdb, 0x95, 0xb9, 0x5f,
	0x34, 0x7e, 0x35, 0x29, 0x19, 0x4c, 0x86, 0x71, 0x7b, 0xc8, 0x58, 0xc2, 0x44, 0x33, 0xaf, 0x30,
	0x70, 0xdf, 0x59, 0xce, 0xd5, 0x7f, 0xe3, 0x2f, 0xa1, 0xef, 0xac, 0xac, 0xd5, 0x58, 0x1d, 0xc8,
	0xf7, 0xe2, 0x64, 0x0b, 0xd1, 0xbc, 0x49, 0x85, 0xc7, 0x3b, 0x80, 0xa7, 0x9a, 0x6c, 0x23, 0x0a,
	0x9e, 0xfd, 0x31, 0xd0, 0x66, 0x74, 0xf1, 0x9b, 0xda, 0x6d, 0x65, 0x3a, 0x78, 0x03, 0xe1, 0x23,
	0x55, 0x72, 0xd1, 0x07, 0x6c, 0x7b, 0x14, 0x9b, 0xce, 0xf2, 0x48, 0x9e, 0xf6, 0xf6, 0x3b, 0x00,
	0x00, 0xff, 0xff, 0x2c, 0x6a, 0x57, 0x0f, 0xea, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MyServerClient is the client API for MyServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MyServerClient interface {
	// 定义rpc端点
	QueryUsers(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserListRes, error)
	GetUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserRes, error)
}

type myServerClient struct {
	cc grpc.ClientConnInterface
}

func NewMyServerClient(cc grpc.ClientConnInterface) MyServerClient {
	return &myServerClient{cc}
}

func (c *myServerClient) QueryUsers(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserListRes, error) {
	out := new(UserListRes)
	err := c.cc.Invoke(ctx, "/myserver.MyServer/QueryUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *myServerClient) GetUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserRes, error) {
	out := new(UserRes)
	err := c.cc.Invoke(ctx, "/myserver.MyServer/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MyServerServer is the server API for MyServer service.
type MyServerServer interface {
	// 定义rpc端点
	QueryUsers(context.Context, *UserReq) (*UserListRes, error)
	GetUser(context.Context, *UserReq) (*UserRes, error)
}

// UnimplementedMyServerServer can be embedded to have forward compatible implementations.
type UnimplementedMyServerServer struct {
}

func (*UnimplementedMyServerServer) QueryUsers(ctx context.Context, req *UserReq) (*UserListRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryUsers not implemented")
}
func (*UnimplementedMyServerServer) GetUser(ctx context.Context, req *UserReq) (*UserRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}

func RegisterMyServerServer(s *grpc.Server, srv MyServerServer) {
	s.RegisterService(&_MyServer_serviceDesc, srv)
}

func _MyServer_QueryUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyServerServer).QueryUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/myserver.MyServer/QueryUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyServerServer).QueryUsers(ctx, req.(*UserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MyServer_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyServerServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/myserver.MyServer/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyServerServer).GetUser(ctx, req.(*UserReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _MyServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "myserver.MyServer",
	HandlerType: (*MyServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryUsers",
			Handler:    _MyServer_QueryUsers_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _MyServer_GetUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}
