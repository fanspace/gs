// Code generated by protoc-gen-go. DO NOT EDIT.
// source: article.proto

package myserver

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ArticleReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"id,omitempty"`
	Limit                int64    `protobuf:"varint,2,opt,name=Limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArticleReq) Reset()         { *m = ArticleReq{} }
func (m *ArticleReq) String() string { return proto.CompactTextString(m) }
func (*ArticleReq) ProtoMessage()    {}
func (*ArticleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c593d380f9840a2, []int{0}
}

func (m *ArticleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleReq.Unmarshal(m, b)
}
func (m *ArticleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleReq.Marshal(b, m, deterministic)
}
func (m *ArticleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleReq.Merge(m, src)
}
func (m *ArticleReq) XXX_Size() int {
	return xxx_messageInfo_ArticleReq.Size(m)
}
func (m *ArticleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleReq.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleReq proto.InternalMessageInfo

func (m *ArticleReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ArticleReq) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type Article struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=Title,proto3" json:"title,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=Content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Article) Reset()         { *m = Article{} }
func (m *Article) String() string { return proto.CompactTextString(m) }
func (*Article) ProtoMessage()    {}
func (*Article) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c593d380f9840a2, []int{1}
}

func (m *Article) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Article.Unmarshal(m, b)
}
func (m *Article) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Article.Marshal(b, m, deterministic)
}
func (m *Article) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Article.Merge(m, src)
}
func (m *Article) XXX_Size() int {
	return xxx_messageInfo_Article.Size(m)
}
func (m *Article) XXX_DiscardUnknown() {
	xxx_messageInfo_Article.DiscardUnknown(m)
}

var xxx_messageInfo_Article proto.InternalMessageInfo

func (m *Article) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Article) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Article) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type ArticleRes struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"success,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=Msg,proto3" json:"msg,omitempty"`
	Article              *Article `protobuf:"bytes,3,opt,name=Article,proto3" json:"article,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArticleRes) Reset()         { *m = ArticleRes{} }
func (m *ArticleRes) String() string { return proto.CompactTextString(m) }
func (*ArticleRes) ProtoMessage()    {}
func (*ArticleRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c593d380f9840a2, []int{2}
}

func (m *ArticleRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleRes.Unmarshal(m, b)
}
func (m *ArticleRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleRes.Marshal(b, m, deterministic)
}
func (m *ArticleRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleRes.Merge(m, src)
}
func (m *ArticleRes) XXX_Size() int {
	return xxx_messageInfo_ArticleRes.Size(m)
}
func (m *ArticleRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleRes.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleRes proto.InternalMessageInfo

func (m *ArticleRes) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ArticleRes) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ArticleRes) GetArticle() *Article {
	if m != nil {
		return m.Article
	}
	return nil
}

type ArticleListRes struct {
	Success              bool       `protobuf:"varint,1,opt,name=Success,proto3" json:"success,omitempty"`
	Msg                  string     `protobuf:"bytes,2,opt,name=Msg,proto3" json:"msg,omitempty"`
	Articles             []*Article `protobuf:"bytes,3,rep,name=Articles,proto3" json:"articles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ArticleListRes) Reset()         { *m = ArticleListRes{} }
func (m *ArticleListRes) String() string { return proto.CompactTextString(m) }
func (*ArticleListRes) ProtoMessage()    {}
func (*ArticleListRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c593d380f9840a2, []int{3}
}

func (m *ArticleListRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleListRes.Unmarshal(m, b)
}
func (m *ArticleListRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleListRes.Marshal(b, m, deterministic)
}
func (m *ArticleListRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleListRes.Merge(m, src)
}
func (m *ArticleListRes) XXX_Size() int {
	return xxx_messageInfo_ArticleListRes.Size(m)
}
func (m *ArticleListRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleListRes.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleListRes proto.InternalMessageInfo

func (m *ArticleListRes) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ArticleListRes) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ArticleListRes) GetArticles() []*Article {
	if m != nil {
		return m.Articles
	}
	return nil
}

func init() {
	proto.RegisterType((*ArticleReq)(nil), "myserver.ArticleReq")
	proto.RegisterType((*Article)(nil), "myserver.Article")
	proto.RegisterType((*ArticleRes)(nil), "myserver.ArticleRes")
	proto.RegisterType((*ArticleListRes)(nil), "myserver.ArticleListRes")
}

func init() {
	proto.RegisterFile("article.proto", fileDescriptor_5c593d380f9840a2)
}

var fileDescriptor_5c593d380f9840a2 = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x51, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0x6e, 0xb2, 0x68, 0xe3, 0x48, 0x8a, 0x0e, 0x3d, 0x2c, 0x9e, 0xca, 0x9e, 0x04, 0x31, 0x87,
	0x78, 0xf3, 0x56, 0x3c, 0x48, 0xa0, 0x1e, 0x4c, 0x7d, 0x01, 0x4d, 0x07, 0x59, 0x6c, 0x1b, 0xbb,
	0x33, 0x15, 0xfa, 0x12, 0x3e, 0xb3, 0x74, 0xb3, 0x5b, 0x84, 0xe6, 0xd2, 0xdb, 0x7c, 0xdf, 0x7e,
	0x3f, 0xb3, 0xbb, 0x90, 0xbf, 0x3b, 0xb1, 0xcd, 0x92, 0x8a, 0x6f, 0xd7, 0x4a, 0x8b, 0xd9, 0x6a,
	0xc7, 0xe4, 0x7e, 0xc8, 0x99, 0x12, 0x60, 0xda, 0x1d, 0xd5, 0xb4, 0xc1, 0x11, 0xa4, 0xd5, 0x42,
	0x27, 0x93, 0xe4, 0x56, 0xd5, 0x69, 0xb5, 0xc0, 0x31, 0x9c, 0xcd, 0xec, 0xca, 0x8a, 0x4e, 0x3d,
	0xd5, 0x01, 0x53, 0xc1, 0x30, 0x78, 0xfa, 0x0c, 0x6f, 0x56, 0x96, 0xe4, 0x0d, 0x17, 0x75, 0x07,
	0x50, 0xc3, 0xf0, 0xa9, 0x5d, 0x0b, 0xad, 0x45, 0x2b, 0xcf, 0x47, 0x68, 0xe8, 0x5f, 0x3d, 0xef,
	0x75, 0xf3, 0x6d, 0xd3, 0x10, 0xb3, 0x8f, 0xcc, 0xea, 0x08, 0xf1, 0x0a, 0xd4, 0x0b, 0x7f, 0x86,
	0xd4, 0xfd, 0x88, 0x77, 0x87, 0x25, 0x7c, 0xe6, 0x65, 0x79, 0x5d, 0xc4, 0x4b, 0x15, 0x31, 0x32,
	0x2a, 0xcc, 0x17, 0x8c, 0xc2, 0x38, 0xb3, 0x2c, 0xa7, 0x56, 0xdd, 0x43, 0x16, 0xdc, 0xac, 0xd5,
	0x44, 0xf5, 0x77, 0x1d, 0x24, 0xe5, 0x6f, 0x02, 0x79, 0x00, 0x73, 0xaf, 0xc1, 0x29, 0xe4, 0xaf,
	0x5b, 0x72, 0xbb, 0x28, 0xc1, 0xf1, 0xb1, 0x9f, 0x36, 0x37, 0xfa, 0x88, 0x0d, 0xdb, 0x9a, 0x01,
	0x3e, 0x02, 0x3c, 0x93, 0xc4, 0x67, 0xef, 0xf7, 0xf7, 0xb1, 0x6c, 0x06, 0x1f, 0xe7, 0xfe, 0xd3,
	0x1f, 0xfe, 0x02, 0x00, 0x00, 0xff, 0xff, 0x97, 0xbd, 0x4b, 0x3c, 0x05, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ArticleServerClient is the client API for ArticleServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArticleServerClient interface {
	QueryArticles(ctx context.Context, in *ArticleReq, opts ...grpc.CallOption) (*ArticleListRes, error)
	GetArticle(ctx context.Context, in *ArticleReq, opts ...grpc.CallOption) (*ArticleRes, error)
}

type articleServerClient struct {
	cc grpc.ClientConnInterface
}

func NewArticleServerClient(cc grpc.ClientConnInterface) ArticleServerClient {
	return &articleServerClient{cc}
}

func (c *articleServerClient) QueryArticles(ctx context.Context, in *ArticleReq, opts ...grpc.CallOption) (*ArticleListRes, error) {
	out := new(ArticleListRes)
	err := c.cc.Invoke(ctx, "/myserver.ArticleServer/QueryArticles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleServerClient) GetArticle(ctx context.Context, in *ArticleReq, opts ...grpc.CallOption) (*ArticleRes, error) {
	out := new(ArticleRes)
	err := c.cc.Invoke(ctx, "/myserver.ArticleServer/GetArticle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArticleServerServer is the server API for ArticleServer service.
type ArticleServerServer interface {
	QueryArticles(context.Context, *ArticleReq) (*ArticleListRes, error)
	GetArticle(context.Context, *ArticleReq) (*ArticleRes, error)
}

// UnimplementedArticleServerServer can be embedded to have forward compatible implementations.
type UnimplementedArticleServerServer struct {
}

func (*UnimplementedArticleServerServer) QueryArticles(ctx context.Context, req *ArticleReq) (*ArticleListRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryArticles not implemented")
}
func (*UnimplementedArticleServerServer) GetArticle(ctx context.Context, req *ArticleReq) (*ArticleRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArticle not implemented")
}

func RegisterArticleServerServer(s *grpc.Server, srv ArticleServerServer) {
	s.RegisterService(&_ArticleServer_serviceDesc, srv)
}

func _ArticleServer_QueryArticles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArticleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleServerServer).QueryArticles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/myserver.ArticleServer/QueryArticles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleServerServer).QueryArticles(ctx, req.(*ArticleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticleServer_GetArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArticleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleServerServer).GetArticle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/myserver.ArticleServer/GetArticle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleServerServer).GetArticle(ctx, req.(*ArticleReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ArticleServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "myserver.ArticleServer",
	HandlerType: (*ArticleServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryArticles",
			Handler:    _ArticleServer_QueryArticles_Handler,
		},
		{
			MethodName: "GetArticle",
			Handler:    _ArticleServer_GetArticle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "article.proto",
}
